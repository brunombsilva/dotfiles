for f in split(glob('~/.vimrc.d/*.vim'), '\n')
    exe 'source' f
endfor

"set term=screen-256color

set nocompatible                  " Must come first because it changes other options.

syntax enable                     " Turn on syntax highlighting.
filetype plugin indent on         " Turn on file type detection.

runtime macros/matchit.vim        " Load the matchit plugin.

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set backspace=indent,eol,start    " Intuitive backspacing.

set hidden                        " Handle multiple buffers better.

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.

set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.

set number                        " Show line numbers.
set ruler                         " Show cursor position.

set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set wrap                          " Turn on line wrapping.
set scrolloff=3                   " Show 3 lines of context around the cursor.

set title                         " Set the terminal's title

set visualbell                    " No beeping.

set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.

set ttymouse=xterm2
set mouse=a

set clipboard=unnamed

" Keep swap files in one location
if has("win32") || has("win64")
    set directory=$TMP
else
    set directory=/tmp
end
"set noswapfile

set tabstop=4                    " Global tab width.
set shiftwidth=4                 " And again, related.
set expandtab                    " Use spaces instead of tabs
set softtabstop=4

set laststatus=2                  " Show the status line all the time

syntax enable

" Solarized theme configuration

let g:solarized_termcolors=256

if has('win32') || has('win64')
    let g:solarized_degrade=1
endif

set background=dark
silent! colorscheme solarized

" https://github.com/bling/vim-airline configuration
let g:airline_theme='powerlineish'
let g:airline_powerline_fonts = 1

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_buffers = 1
let g:airline#extensions#tabline#buffer_idx_mode = 1

nmap <leader>1 <Plug>AirlineSelectTab1
nmap <leader>2 <Plug>AirlineSelectTab2
nmap <leader>3 <Plug>AirlineSelectTab3
nmap <leader>4 <Plug>AirlineSelectTab4
nmap <leader>5 <Plug>AirlineSelectTab5
nmap <leader>6 <Plug>AirlineSelectTab6
nmap <leader>7 <Plug>AirlineSelectTab7
nmap <leader>8 <Plug>AirlineSelectTab8
nmap <leader>9 <Plug>AirlineSelectTab9

" Tab mappings.
map <leader>tt :tabnew<cr>
map <leader>te :tabedit
map <leader>tc :tabclose<cr>
map <leader>to :tabonly<cr>
map <leader>tn :tabnext<cr>
map <leader>tp :tabprevious<cr>
map <leader>tf :tabfirst<cr>
map <leader>tl :tablast<cr>
map <leader>tm :tabmove

" Tabs style tweaks
hi TabLineSel term=underline cterm=underline ctermfg=239 ctermbg=187 gui=bold
hi TabNumSel term=underline cterm=underline ctermfg=239 ctermbg=187 gui=bold

" Automatic fold settings for specific files.
autocmd FileType php setlocal foldmethod=syntax
autocmd FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2
autocmd FileType xml setlocal foldmethod=syntax

" PHP Comments
autocmd FileType php setlocal comments=s1:/**,mb:*,ex:*/,://,:#

" Fold/unfold PHP classes, methods, functions, etc
let g:php_folding=1

" smarty files syntax highlighting
au BufRead,BufNewFile *.tpl set filetype=smarty

"xmledit plugin configuration
let loaded_xmledit = 1

" Don't use vi compatibility mode
set nocp

if version >= 600
    filetype plugin indent on
endif

set mouse=n
let g:spchkmouse   = 1
let g:spchkautonext= 1
let g:spchkdialect = "usa"

"let g:acp_behaviorSnipmateLength = 4
let g:acp_behaviorKeywordLength = 5
"let g:acp_behaviourHtmlOmniLength = 4

set autoindent                              "Retain indentation on next line
set smartindent                             "Turn on autoindenting of blocks
set cinwords = ""                           "But not for C-like keywords
inoremap # X<C-H>#|                         "And no magic outdent for comments
nnoremap <silent> >> :call ShiftLine()<CR>| "And no shift magic on comments

function! ShiftLine()
    set nosmartindent
    normal! >>
    set smartindent
endfunction

set backspace=indent,eol,start      "BS past autoindents, line boundaries,
set matchpairs+=<:>             "Match angle brackets too

"Switch off highlighting till next search and clear messages...
nmap <silent> <BS> :nohlsearch <BAR> set nocursorcolumn<CR>

" Use space to jump down a page (like browsers do)...
noremap <Space> <PageDown>

"=====[ Correct common mistypings in-the-fly ]=======================

iab    retrun  return
iab     pritn  print
iab       teh  the
iab      liek  like
iab  liekwise  likewise
iab      Pelr  Perl
iab      pelr  perl
iab        ;t  't
iab      moer  more
iab  previosu  previous

"shortcut to rapidly toggle `set list`
nmap <leader>l :set list!<CR>

"Use the same symbols as TextMate for tabstops and EOLs
silent! set listchars=tab:<.,eol:ยฌ

"Invisible character colors
highlight NonText guifg=#4a4a59
highlight SpecialKey guifg=#4a4a59

"DBGp-client configuration
hi DbgCurrent term=reverse ctermfg=White ctermbg=Red gui=reverse
hi DbgBreakPt term=reverse ctermfg=Red ctermbg=DarkGrey gui=reverse
let g:debuggerMaxDepth = 2

" Rainbow Parentheses Highlighting
let g:rainbow_active=1

" Syntastic Configuration

" Automatically open the location-list hen a buffer has errors
let g:syntastic_auto_loc_list=1

"location-list size
let g:syntastic_loc_list_height=3

" PHP syntax checking configuration
let g:syntastic_php_phpmd_post_args = 'design'
let g:syntastic_php_phpcs_args = '--standard=~/.configuration/php/phpcs_ruleset.xml'

let g:syntastic_twig_twiglint_exec='~/.composer/vendor/asm89/twig-lint/bin/twig-lint'

" Let's always check PHP syntax and best practices
let g:syntastic_mode_map = { 'mode': 'active', 'active_filetypes': ['php'], 'passive_filetypes': [''] }

"  Prettier!
hi Normal ctermbg=None
hi LineNr ctermfg=235 ctermbg=None
hi SignColumn ctermbg=None

" Autocomplete Bindings and options. Nowadays I don't even use it
imap <C-Space> <C-x><C-o>
imap <C-@> <C-Space>
set completeopt=longest,menu,preview

" Smarty matching pairs support 
autocmd FileType smarty let b:match_words = '<:>,<\@<=[ou]l\>[^>]*\%(>\|$\):<\@<=li\>:<\@<=/[ou]l>,<\@<=dl\>[^>]*\%(>\|$\):<\@<=d[td]\>:<\@<=/dl>,<\@<=\([^/][^ \t>]*\)[^>]*\%(>\|$\):<\@<=/\1>'

" Show TagBar on the left
"let g:tagbar_left = 1

" TagBar & NERDTree keybindings support
imap <leader>nt <Esc><leader>nt
map <leader>nt :NERDTreeToggle<cr>

imap <leader>ide <Esc><leader>ide
map <leader>ide :NERDTreeClose<cr>:TagbarClose<cr>:NERDTree<cr>:TagbarOpen<cr><C-w>t<C-w>s:buffer NERD_tree_1<cr><C-w>t<C-w>l<C-w>c<C-w>t
map <leader>tb :TagbarToggle<cr>

" Git file history navigation
map <leader>gt :call TimeLapse() <cr>

let g:ctrlp_working_path_mode = 'rw'

" ctrlp extension used to navigate between current buffer function definitions
let g:ctrlp_extensions = ['funky']
let g:ctrlp_funky_syntax_highlight = 1
let g:ctrlp_funky_matchtype = 'path'

" ctrlp shortcuts
nnoremap <C-y> :CtrlPYankring<cr>
nnoremap <C-c>l :CtrlPCmdline<cr>
nnoremap <C-c>b :CtrlPBuffer<cr>
nnoremap <C-c>f :CtrlPFunky<cr>

" narrow the list down with a word under cursor
nnoremap <C-c>fU :execute 'CtrlPFunky ' . expand('<cword>')<Cr>

"changesPlugin, check for changes from filesystem when entering a buffer
au VimEnter * EC

" Shortcuts to resize panes
map - <C-W>-
map + <c-W>+
map ยบ <C-W>>
map รง <c-W><

"disable vim-session plugin session auto-saving
let g:session_autosave = 'no'
"let g:session_autoload = 'no'

" documentation lookup, for PHP
"let g:investigate_use_command_for_php = 1
"let g:investigate_command_for_php = '^i:call system(''midori "http://devdocs.io/#q=^s"'')'
"let g:investigate_command_for_php = '^i:call system(''midori -a "http://php.net/search.php?show=quickref&pattern=^s"'')'

"set splitbelow

".net stuff
let g:OmniSharp_server_path = '/home/vagrant/omnisharp-roslyn/src/OmniSharp/bin/Release/netcoreapp1.0/ubuntu.14.04-x64/OmniSharp'
"let g:syntastic_cs_checkers = ['syntax', 'semantic', 'issues']
let g:syntastic_cs_checkers = ['code_checker']
let g:OmniSharp_server_type = 'roslyn'
let g:omnicomplete_fetch_documentation=1

let g:SuperTabDefaultCompletionType = 'context'
let g:SuperTabContextDefaultCompletionType = "<c-x><c-o>"
let g:SuperTabDefaultCompletionTypeDiscovery = ["&omnifunc:<c-x><c-o>","&completefunc:<c-x><c-n>"]
let g:SuperTabClosePreviewOnPopupClose = 1

let g:padawan#composer_command = "composer"

"vim-indent-guides
let g:indent_guides_guide_size = 1
let g:indent_guides_start_level = 1
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_auto_colors = 0
let g:indent_guides_exclude_filetypes = ['help', 'nerdtree']

hi IndentGuidesOdd  ctermbg=233
hi IndentGuidesEven ctermbg=235
