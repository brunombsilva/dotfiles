[user]
    email = bruno.b.silva@co.sapo.pt
    name = Bruno Silva
[alias]
    # View the SHA, description, and history graph of the latest 20 commits 
    l = log --pretty=oneline -n 20 --graph
    # View the current working tree status using the short format
    s = status -sb
    # Diff
    d = diff --patch-with-stat
    # Pull in remote changes for the current repository and all its submodules
    p = !"git pull; git submodule foreach git pull origin master"
    # Clone a repository including all submodules
    c = clone --recursive
    # Commit all changes
    ca = !git add . && git add -u && git commit -a
    # Switch to a branch, creating it if necessary
    go = checkout -B
    # Undo a `git push`
    undopush = push -f origin HEAD^:master
    delete-merged-branches = "!f() { git checkout --quiet master && git branch --merged | grep --invert-match '\\*' | xargs -n 1 git branch --delete; git checkout --quiet @{-1}; }; f" 

    # pretty log with graph
    ls = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    # log with changed files per commit
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    # log with relative date
    ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
    # last commit changed files
    dl = "!git ll -1"
    # list git aliases
    la = "!git config -l | grep alias | cut -c 7-"
    # list of branches with last modification date
    brunch = "!f() { branches=`git branch $@ |sed s/^..//`; for k in $branches;do echo `git log -1 --pretty=format:\"%C(yellow)%cr%Creset\" \"$k\"`\\\t\"$k\";done; }; f "

[apply]
    # Detect whitespace errors when applying a patch
    whitespace = fix

[core]
    # Use custom `.gitignore` and `.gitattributes`
    excludesfile = ~/.gitignore
    ;attributesfile = ~/.gitattributes
    # Treat spaces before tabs, lines that are indented with 8 or more spaces, and all kinds of trailing whitespace as an error
    whitespace = space-before-tab,indent-with-non-tab,trailing-space
    autocrlf = false
    fileMode = false

[color]
    # Use colors in Git commands that are capable of colored output when outputting to the terminal
    ui = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[merge]
    # Include summaries of merged commits in newly created merge commit messages
    log = true

# Use `origin` as the default remote on the `master` branch in all cases
[branch "master"]
    remote = origin
    merge = refs/heads/master

# Use `origin` as the default remote on the `develop` branch in all cases
[branch "develop"]
    remote = origin
    merge = refs/heads/develop

# URL shorthands
[url "git@github.com:"]
    insteadOf = "gh:"
    pushInsteadOf = "github:"
    pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
    insteadOf = "github:"
[url "git@gist.github.com:"]
    insteadOf = "gst:"
    pushInsteadOf = "gist:"
    pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
    insteadOf = "gist:"

[gui]
    encoding = utf-8
